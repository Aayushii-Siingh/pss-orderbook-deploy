pipeline {
  agent none
  stages {
    stage('Build and Publish') {
      steps {
        script {
          for (int i = 1; i <= NUMBER_OF_TEAM.toInteger(); i++) {
            // Build and Publish DB
            container(name: "kaniko-db-${i}") {
              sh """echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json
                /kaniko/executor -f \$(pwd)/Dockerfiles/Dockerfile_mysql -c \$(pwd) --insecure --skip-tls-verify --cache=false --destination=${ECR_REPO}:${JOB_NAME_FORCED}\$(printf "%02d" ${i})db-dev-${BUILD_NUMBER}
              """
            }

            // Build and Publish API
            container(name: "kaniko-api-${i}") {
              sh """echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json
                /kaniko/executor -f \$(pwd)/Dockerfiles/Dockerfile_fastapi -c \$(pwd) --insecure --skip-tls-verify --cache=false --destination=${ECR_REPO}:${JOB_NAME_FORCED}\$(printf "%02d" ${i})api-dev-${BUILD_NUMBER}
              """
            }

            // Build Trading Front End
            container(name: "kaniko-fe-${i}") {
              sh """echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json
                /kaniko/executor -f \$(pwd)/Dockerfiles/Dockerfile_nginx -c \$(pwd) --insecure --skip-tls-verify --cache=false --destination=${ECR_REPO}:${JOB_NAME_FORCED}\$(printf "%02d" ${i})fe-dev-${BUILD_NUMBER}
              """
            }
          }
        }
      }
    }
  }

  environment {
    ECR_REPO = '108174090253.dkr.ecr.us-east-1.amazonaws.com/production-support-course'
    JOB_NAME_FORCED = 'c500team'
    NUMBER_OF_TEAM = '60'
  }
}
